---
import Layout from "../layouts/Layout.astro";
import { Button, ButtonGroup } from "@mui/material";
import ImageGrid from "../components/ImageGrid.astro";
import WishlishtButton from "../components/WishlistButton.jsx";
import AddToCartButton from "../components/AddToCartButton.jsx";
import { get_product_details } from "../lib/petstore_service";
import { get_today } from "../lib/misc";

const session = await Astro.locals.auth.validate();
var id = Astro.url.searchParams.get("id") || "";
console.log("query -" + id);

console.log('pdp date - ', get_today());
const item = await get_product_details(id);
const booking_url = "/booking?id=" + item.seller_id + "&date=" + get_today();
---

<Layout title="Product Description">
  <div class="container">
    <ImageGrid photos={item.photos} />
    <div class="details">
      <div class="content">
        <div class="pdp-title">
          {item.title}
          <div class="collection">Pet Collection</div>
        </div>
        <p>
          {item.description}
        </p>

        <div class="info-table-title">About the Pet</div>
        <br />

        <div class="info-table">
          <div class="tableContainer">
            <div class="index-row">
              <div class="index-rowKey">LINEAGE</div>
              <div class="index-rowValue">
                {item.lineage}
              </div>
            </div>

            <div class="index-row">
              <div class="index-rowKey">AGE</div>
              <div class="index-rowValue">
                {item.age}
              </div>
            </div>

            <div class="index-row">
              <div class="index-rowKey">WEIGHT</div>
              <div class="index-rowValue">
                {item.weight}
              </div>
            </div>

            <div class="index-row">
              <div class="index-rowKey">SEX</div>
              <div class="index-rowValue">
                {item.sex}
              </div>
            </div>

            <div class="index-row">
              <div class="index-rowKey">COLOR</div>
              <div class="index-rowValue">
                {item.color}
              </div>
            </div>

            <div class="index-row">
              <div class="index-rowKey">SPECIES</div>
              <div class="index-rowValue">
                {item.species}
              </div>
            </div>
          </div>
        </div>

        <div class="price">Rs. {item.price}</div>
      </div>

      <div class="button-container">
        <div class="two-buttons">
          <WishlishtButton session={session} product_id={id} client:load />

          <Button size="large" variant="outlined" href={booking_url}>
            Book a video call?
          </Button>
        </div>

        <div class="quantity-controller">
          <ButtonGroup size="medium" aria-label="small outlined button group">
            <div id={"minus-button"}>
              <Button variant="contained" size="large">-</Button>
            </div>

            <div id={"item-count"}>
              <Button size="large">1</Button>
            </div>

            <div id={"plus-button"}>
              <Button variant="contained" size="large">+</Button>
            </div>
          </ButtonGroup>
        </div>

        <div class="cart-component">
          <AddToCartButton session={session} product_id={id} client:load />
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  @import url("https://fonts.googleapis.com/css?family=Poppins:400,500,600,800&display=swap");

  .container {
    display: flex;
    flex-direction: row;
    background: #fff;
    margin: 5%;
  }

  .pdp-title {
    font-size: 3rem;
    font-style: italic;
    font-weight: 500;
    color: #1976d2;
  }

  .collection {
    font-size: 1rem;
    letter-spacing: 0.8rem;
    margin-top: 3%;
    margin-bottom: 5%;
    font-weight: 400;
    color: #999;
    text-transform: uppercase;
  }

  .container .details {
    display: flex;
    flex-direction: column;
    padding-left: 5%;
    width: 50%;
  }

  .content {
    display: flex;
    flex-direction: column;
    width: 100%;
    word-wrap: break-word;
  }

  .button-container {
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-content: center;
  }

  .button-container .two-buttons {
    display: flex;
    flex: 50%;
    align-items: center;
    justify-content: space-between;
    padding: 5%;
  }

  .button-container .cart-component {
    display: flex;
    align-items: center;
    justify-content: space-around;
    padding: 5%;
  }

  .container .details h2 {
    margin: 0;
    padding: 0;
    font-size: 2.4em;
    line-height: 1em;
    color: #444;
  }

  .info-table-title {
    margin: 0;
    padding: 0;
    font-size: 1.5rem;
    font-weight: 500;
    letter-spacing: 0.5rem;
    color: #000000;
  }

  .container .details .info-table {
    margin-top: 5%;
    font-size: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.3rem;
    color: #999;
    border: 1px solid #eaeaec;
  }

  .container .details p {
    font-family: Poppins;
    color: #686868;
    font-size: 1rem;
    margin-bottom: 36px;
    letter-spacing: 3px;
    line-height: 2rem;
  }

  .quantity-controller {
    margin: 5%;
  }

  .price {
    margin-top: 5%;
    margin-bottom: 5%;
    padding: 0;
    font-size: 3rem;
    font-weight: 500;
    letter-spacing: 0.6rem;
    color: #1976d2;
    float: left;
  }

  .product-colors span {
    width: 26px;
    height: 26px;
    top: 7px;
    margin-right: 12px;
    left: 10px;
    border-radius: 50%;
    position: relative;
    cursor: pointer;
    display: inline-block;
  }

  .black {
    background: #000;
  }

  .red {
    background: #d5212e;
  }

  .orange {
    background: #f18557;
  }

  .product-colors .active:after {
    content: "";
    width: 36px;
    height: 36px;
    border: 2px solid #000;
    position: absolute;
    border-radius: 50%;
    box-sizing: border-box;
    left: -5px;
    top: -5px;
  }

  /* responsive */
  @media (max-width: 480px) {
    .container {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      width: 100%;
      height: 100%;
      background: #fff;
    }

    .container .details {
      width: 100%;
      display: flex;
      align-items: start;
    }

    .container .content {
      justify-content: center;
      align-items: center;
      width: 100%;
      box-sizing: border-box;
      margin: 3%;
    }

    .button-container {
      position: relative;
      align-items: stretch;
      justify-content: center;
      width: 100%;
      display: flex;
      margin: 3%;
    }

    .button-container button {
      align-items: center;
      margin-right: 3%;
    }

    .container .imgBx {
      box-sizing: border-box;
      width: 100% !important;
      height: 100%;
      text-align: center;
      align-items: center;
      align-content: center;
      margin: 10%;
    }
    .container .imgBx img {
      width: 100%;
      align-items: center;
      align-content: center;
    }

    .container .details p {
      margin-left: 0;
      max-width: 100%;
    }

    .img-grid {
      list-style: none;
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-rows: 80vw 30vw;
      gap: 1rem;
    }
  }

  footer {
    position: fixed;
    right: 16px;
    bottom: 12px;
  }

  footer a {
    color: #fff;
    text-decoration: none;
    font-size: 12px;
  }

  .tableContainer {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin-top: 3%;
  }

  .index-row {
    position: relative;
    border-bottom: 1px solid #eaeaec;
    margin: 0 0 12px;
    padding-bottom: 3%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding-left: 10%;
    padding-right: 10%;
  }

  .index-rowKey {
    color: #7e818c;
    margin-bottom: 5px;
  }

  .index-rowValue {
    color: #282c3f;
  }
</style>

<script>
  let count = 1;

  //Plus Button
  document.getElementById("plus-button").addEventListener(
    "click",
    (e) => {
      count = count + 1;
      document
        .getElementById("item-count")
        .getElementsByTagName("button")[0].innerHTML = count.toString();
    },
    false
  );

  //Minus Button
  document.getElementById("minus-button").addEventListener(
    "click",
    (e) => {
      if (count > 0) {
        count = count - 1;
        document
          .getElementById("item-count")
          .getElementsByTagName("button")[0].innerHTML = count.toString();
      }
    },
    false
  );
</script>
