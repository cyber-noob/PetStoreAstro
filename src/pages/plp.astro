---
import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import axios from "../../node_modules/axios";
import { line } from '@lucia-auth/oauth/providers';

var query = Astro.url.searchParams.get('query') || ''
console.log('query -' + query)
var items = []
//Fire api request
const getSearchResults = async (val: string) => {
  await axios({
    url: "/petstore_proxy/search/products",
    method: "get",
    baseURL: "http://localhost:4321",
    params: {
      query: val,
    },
  })
    .then((response) => {
      // console.log("[LPL]search result - " + JSON.stringify(response.data, null, 4));
      
      //Extarct data and assign to items
      const children = response.data.root.children
      for(const child of children) {
        items.push(child)
      }
      // console.log('items == ', items)
    })
    .catch((error) => {
      console.log("[search] " + error);
    });
};

  if (query != '') {
    await getSearchResults(query)
  } else {
    console.log('no search term passed')
  }

var result = []
items.forEach(item => {
  let map = new Map(Object.entries(item));
  const title = new Map(Object.entries(map.get('fields'))).get('title');
  const age = new Map(Object.entries(map.get('fields'))).get('age');
  const weight = new Map(Object.entries(map.get('fields'))).get('weight');
  const lineage = new Map(Object.entries(map.get('fields'))).get('lineage');
  const price = new Map(Object.entries(map.get('fields'))).get('price');
  const color = new Map(Object.entries(map.get('fields'))).get('color');

  let res = {
    'Title': title, 
    'Age': age,
    'Weight': weight,
    'Lineage': lineage,
    'Price': price,
    'Color': color
  }
  result.push(res)
})
---

<Layout title="Search results for Dogs." productsCount="2358 products found">
  <div class="side-to-side">
    <div class="grid-parent">
        {
          result.map((item) => (
            <Card clazz="grid-child" id="card" item= { item }/>
          )
          )
        }
    </div>
  </div>
</Layout>

<style>
.grid-parent {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 10px;
    width: 100%;
    padding-right: 2%;
}

.grid-child {
    margin: 10px;
}

.side-to-side {
    display: flex;
    align-items: stretch;
}
</style>