---
import CartCard from "../components/CartCard.astro";
import Layout from "../layouts/Layout.astro";

var query = Astro.url.searchParams.get("query") || "";
console.log("query -" + query);
var items = [];
const localDev = true;

if (localDev) {
  items = [
    {
      id: "id:namespace:products::5",
      relevance: 0.5412417054176331,
      source: "products",
      fields: {
        sddocname: "products",
        documentid: "id:namespace:products::5",
        idProducts_Animal: "1",
        title:
          '"Beagle Puppies: Curious Companions for Your Next Great Adventure!"',
        description:
          "Beagles are known for their friendly and curious nature. They are a small to medium-sized breed with a keen sense of smell, often used in hunting and detection roles.",
        age: "4 month",
        lineage: "normal",
        weight: "5 kg",
        price: "23000",
        sex: "Male",
        color: "black n white",
        species: "Dog",
        breed: "Golden Retriever",
      },
    },

    {
      id: "id:namespace:products::5",
      relevance: 0.5412417054176331,
      source: "products",
      fields: {
        sddocname: "products",
        documentid: "id:namespace:products::5",
        idProducts_Animal: "2",
        title:
          '"Beagle Puppies: Curious Companions for Your Next Great Adventure!"',
        description:
          "Beagles are known for their friendly and curious nature. They are a small to medium-sized breed with a keen sense of smell, often used in hunting and detection roles.",
        age: "4 month",
        lineage: "normal",
        weight: "5 kg",
        price: "23000",
        sex: "Male",
        color: "black n white",
        species: "Dog",
        breed: "Golden Retriever",
      },
    },

    {
      id: "id:namespace:products::5",
      relevance: 0.5412417054176331,
      source: "products",
      fields: {
        sddocname: "products",
        documentid: "id:namespace:products::5",
        idProducts_Animal: "3",
        title:
          '"Beagle Puppies: Curious Companions for Your Next Great Adventure!"',
        description:
          "Beagles are known for their friendly and curious nature. They are a small to medium-sized breed with a keen sense of smell, often used in hunting and detection roles.",
        age: "4 month",
        lineage: "normal",
        weight: "5 kg",
        price: "23000",
        sex: "Male",
        color: "black n white",
        species: "Dog",
        breed: "Golden Retriever",
      },
    },
  ];
}

else {
//Fire api request
const getSearchResults = async (val: string) => {
  await axios({
    url: "/search/products",
    method: "get",
    baseURL: "http://localhost:8082",
    params: {
      query: val,
    },
  })
    .then((response) => {
      // console.log("[LPL]search result - " + JSON.stringify(response.data, null, 4));

      //Extarct data and assign to items
      const children = response.data.root.children;
      for (const child of children) {
        items.push(child);
      }
      // console.log('items == ', items)
    })
    .catch((error) => {
      console.log("[search] " + error);
    });
};

if (query != "") {
  await getSearchResults(query);
} else {
  console.log("no search term passed");
}
}

var result = [];
items.forEach((item) => {
  let map = new Map(Object.entries(item));
  let fields = new Map(Object.entries(map.get("fields")));
  const title = fields.get("title");
  const age = fields.get("age");
  const weight = fields.get("weight");
  const lineage = fields.get("lineage");
  const price = fields.get("price");
  const color = fields.get("color");
  const id = fields.get("idProducts_Animal");

  let res = {
    Title: title,
    Age: age,
    Weight: weight,
    Lineage: lineage,
    Price: price,
    Color: color,
    id: id,
  };
  result.push(res);
});

console.log("results >> ", result);

---

<Layout
  title="Hey make sure we have all your favorite items on your shopping cart!"
  productsCount="Items count: 4"
>
  <div class="cart-parent">
    <div class="cart-item" id="cart">
      {
        result.map((item) => (
          <CartCard item={item}/>
        ))
      }
    </div>

    <div class="cart-total">
      <div
        class="flex flex-col lg:h-screen h-auto lg:px-8 md:px-7 px-4 lg:py-20 md:py-10 py-6 justify-between overflow-y-auto"
      >
        <div>
          <p
            class="lg:text-4xl text-3xl font-black leading-9 text-gray-800 dark:text-white"
          >
            Summary
          </p>
          <div class="flex items-center justify-between pt-16">
            <p class="text-base leading-none text-gray-800 dark:text-white">
              Subtotal
            </p>
            <p class="text-base leading-none text-gray-800 dark:text-white">
              1,000
            </p>
          </div>
          <div class="flex items-center justify-between pt-5">
            <p class="text-base leading-none text-gray-800 dark:text-white">
              Shipping
            </p>
            <p class="text-base leading-none text-gray-800 dark:text-white">
              100
            </p>
          </div>
          <div class="flex items-center justify-between pt-5">
            <p class="text-base leading-none text-gray-800 dark:text-white">
              Tax
            </p>
            <p class="text-base leading-none text-gray-800 dark:text-white">
              2%
            </p>
          </div>
        </div>
        <div>
          <div class="flex items-center pb-6 justify-between lg:pt-5 pt-20">
            <p class="text-2xl leading-normal text-gray-800 dark:text-white">
              Total
            </p>
            <p
              class="text-2xl font-bold leading-normal text-right text-gray-800 dark:text-white"
            >
              1,240
            </p>
          </div>
          <button
            id="checkout-button"
            class="text-base leading-none w-full py-5 bg-gray-800 border-gray-800 border focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800 text-white dark:hover:bg-gray-700"
            >Checkout</button
          >
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  /* width */
  #scroll::-webkit-scrollbar {
    width: 1px;
  }

  /* Track */
  #scroll::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  /* Handle */
  #scroll::-webkit-scrollbar-thumb {
    background: rgb(133, 132, 132);
  }

  .cart-item {
    display: flex;
    width: 100%;
    align-items: normal;
    flex-direction: column;
  }

  .cart-total {
    width: 100%;
  }

  .cart-parent {
    display: flex;
    flex-direction: column;
    padding: 3%;
  }
</style>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  let checkoutButton = document.getElementById("checkout-button");
  let orderCreationResult = {
    id: "",
  };

  const body = {
    amount: 500,
    currency: "INR",
    receipt: "qwsaq1",
    partial_payment: true,
    first_payment_min_amount: 230,
  };

  async function createRazorPay(data) {
    try {
      const response = await fetch("https://api.razorpay.com/v1/orders", {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
          Authorization:
            "Basic " +
            btoa("rzp_test_fJLPcc02TCY2NS" + ":" + "E73rH6RLSA5GO1Uto1N1tGpb"),
        },
        body: JSON.stringify(data),
      });

      orderCreationResult = await response.json();
      console.log("Success:", orderCreationResult);
    } catch (error) {
      console.error("Error:", error);
    }
  }

  var options = {
    "key": "rzp_test_fJLPcc02TCY2NS", // Enter the Key ID generated from the Dashboard
    "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
    "currency": "INR",
    "name": "Acme Corp", //your business name
    "description": "Test Transaction",
    "image": "https://example.com/your_logo",
    "order_id": "", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
    "callback_url": "https://localhost:4321/payment/thankyou",
    "handler": function (response){
        if (response.razorpay_payment_id == 'undefined' || response.razorpay_payment_id < 1) {
          window.location.replace("/payment/failure");
        }
        else {
          window.location.replace('/payment/thankyou');
        }
    },
    "prefill": {
      //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
      name: "Gaurav Kumar", //your customer's name
      email: "gaurav.kumar@example.com",
      contact: "9000090000", //Provide the customer's phone number for better conversion rates
    },
    "notes": {
      address: "Razorpay Corporate Office",
    },
    "theme": {
      color: "#3399cc",
    },
  };

  checkoutButton.addEventListener("click", async (e) => {
    console.log("performing checkout");
    await createRazorPay(body);

    options.order_id = orderCreationResult.id;
    console.log("options: ", JSON.stringify(options));

    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed', function (response){
        alert(response.error.code);
        alert(response.error.description);
        alert(response.error.source);
        alert(response.error.step);
        alert(response.error.reason);
        alert(response.error.metadata.order_id);
        alert(response.error.metadata.payment_id);
    });

    rzp1.open();
    e.preventDefault();


  });
</script>
