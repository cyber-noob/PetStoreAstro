---
import { Button, Chip } from "@mui/material";
import CartCard from "../components/CartCard.astro";
import Layout from "../layouts/Layout.astro";
import axios from "axios";
import AddressCard from "../components/AddressCard.astro";
import AlertDialog from "../components/ConfirmPopUp";

var query = Astro.url.searchParams.get("query") || "";
console.log("query -" + query);
var items = [];
const localDev = true;

let deliver_to = "AJAY D (9530193055)";
let delivery_address = `54/90I, Jimmy Street,
Behind PoolClub Sinata,
TellyTubby,
Dubai - 783019`;

if (localDev) {
  items = [
    {
      id: "id:namespace:products::5",
      relevance: 0.5412417054176331,
      source: "products",
      fields: {
        sddocname: "products",
        documentid: "id:namespace:products::5",
        idProducts_Animal: "1",
        title:
          '"Beagle Puppies: Curious Companions for Your Next Great Adventure!"',
        description:
          "Beagles are known for their friendly and curious nature. They are a small to medium-sized breed with a keen sense of smell, often used in hunting and detection roles.",
        age: "4 month",
        lineage: "normal",
        weight: "5 kg",
        price: "23000",
        sex: "Male",
        color: "black n white",
        species: "Dog",
        breed: "Golden Retriever",
      },
    },

    {
      id: "id:namespace:products::5",
      relevance: 0.5412417054176331,
      source: "products",
      fields: {
        sddocname: "products",
        documentid: "id:namespace:products::5",
        idProducts_Animal: "2",
        title:
          '"Beagle Puppies: Curious Companions for Your Next Great Adventure!"',
        description:
          "Beagles are known for their friendly and curious nature. They are a small to medium-sized breed with a keen sense of smell, often used in hunting and detection roles.",
        age: "4 month",
        lineage: "normal",
        weight: "5 kg",
        price: "23000",
        sex: "Male",
        color: "black n white",
        species: "Dog",
        breed: "Golden Retriever",
      },
    },

    {
      id: "id:namespace:products::5",
      relevance: 0.5412417054176331,
      source: "products",
      fields: {
        sddocname: "products",
        documentid: "id:namespace:products::5",
        idProducts_Animal: "3",
        title:
          '"Beagle Puppies: Curious Companions for Your Next Great Adventure!"',
        description:
          "Beagles are known for their friendly and curious nature. They are a small to medium-sized breed with a keen sense of smell, often used in hunting and detection roles.",
        age: "4 month",
        lineage: "normal",
        weight: "5 kg",
        price: "23000",
        sex: "Male",
        color: "black n white",
        species: "Dog",
        breed: "Golden Retriever",
      },
    },
  ];
} else {
  //Fire api request
  const getSearchResults = async (val: string) => {
    await axios({
      url: "/search/products",
      method: "get",
      baseURL: "http://localhost:8082",
      params: {
        query: val,
      },
    })
      .then((response) => {
        // console.log("[LPL]search result - " + JSON.stringify(response.data, null, 4));

        //Extarct data and assign to items
        const children = response.data.root.children;
        for (const child of children) {
          items.push(child);
        }
        // console.log('items == ', items)
      })
      .catch((error) => {
        console.log("[search] " + error);
      });
  };

  if (query != "") {
    await getSearchResults(query);
  } else {
    console.log("no search term passed");
  }
}

var result = [];
items.forEach((item) => {
  let map = new Map(Object.entries(item));
  let fields = new Map(Object.entries(map.get("fields")));
  const title = fields.get("title");
  const age = fields.get("age");
  const weight = fields.get("weight");
  const lineage = fields.get("lineage");
  const price = fields.get("price");
  const color = fields.get("color");
  const id = fields.get("idProducts_Animal");

  let res = {
    Title: title,
    Age: age,
    Weight: weight,
    Lineage: lineage,
    Price: price,
    Color: color,
    id: id,
  };
  result.push(res);
});

console.log("results >> ", result);
---

<Layout
  title="Hey make sure we have all your favorite items on your shopping cart!"
  productsCount="Items count: 4"
>
  <div class="cart-parent">
    <div class="cart-item" id="cart">
      <div class="delivery-address">
        <div class="delivery-header">
        <div>Deliver To: {deliver_to}</div>
        <Chip label="Home" variant="outlined" color="primary" size="small"/>
        </div>
        <div>{delivery_address}</div>
      </div>
      {result.map((item, index) => <CartCard item={item} />)}
    </div>

    <div class="cart-total">
      <div class="cart-price-title">Price Breakup</div>
      <div class="cart-price-breakup">
        <div class="row">
          <h5>Total MRP</h5>
          <h5>Rs.2300</h5>
        </div>

        <div class="row">
          <h5>Platform Fee</h5>
          <h5>Rs.2</h5>
        </div>

        <div class="row">
          <h5>Shipping Fee</h5>
          <h5>Rs.1000</h5>
        </div>

        <div class="row">
          <h5>Handling Fee</h5>
          <h5>Free</h5>
        </div>

        <div class="cart-price-footer">
          <div class="row">
            <h3>Total</h3>
            <h4>Rs.5000</h4>
          </div>

          <div id="place-order">
            <AlertDialog delivery_address={delivery_address} client:load/>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .delivery-address {
    padding: 3%;
    box-shadow: 0 6px 20px -10px #000000;
    margin-bottom: 5%;
    font-family: "Courier New", Courier, monospace;
    font-size: small;
    background-color: #fafafaaa;
  }

  .delivery-header {
    font-weight: bold;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  /* width */
  #scroll::-webkit-scrollbar {
    width: 1px;
  }

  /* Track */
  #scroll::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  /* Handle */
  #scroll::-webkit-scrollbar-thumb {
    background: rgb(133, 132, 132);
  }

  .stepper {
    display: flex;
    flex-direction: row;
    justify-content: center;
    margin-top: 5%;
  }

  .cart-parent {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    width: 100%;
    margin-top: 5%;
  }

  .cart-item {
    display: flex;
    width: 70%;
    align-items: normal;
    flex-direction: column;
  }

  .cart-total {
    width: 20%;
    height: fit-content;
    padding: 3% 2%;
    box-shadow: 0 6px 10px -4px rgba(0, 0, 0, 0.7);
    display: flex;
    flex-direction: column;
    justify-content: start;
  }

  .cart-price-breakup > .row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    font-size: medium;
    font-weight: lighter;
    color: rgba(128, 128, 128, 0.741);
  }

  .cart-price-title {
    font-size: medium;
    font-weight: bold;
    color: rgba(0, 0, 0, 0.784);
    margin-bottom: 3%;
  }

  .cart-price-footer {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    box-shadow: 0 -6px 10px -10px #000000;
  }

  .cart-price-footer > .row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    font-size: medium;
    font-weight: bold;
    color: rgb(64, 64, 64);
  }
</style>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  let checkoutButton = document.getElementById("checkout-button");
  let orderCreationResult = {
    id: "",
  };

  const body = {
    amount: 500,
    currency: "INR",
    receipt: "qwsaq1",
    partial_payment: true,
    first_payment_min_amount: 230,
  };

  async function createRazorPay(data) {
    try {
      const response = await fetch("https://api.razorpay.com/v1/orders", {
        method: "POST",
        headers: {
          "Content-Type": "application/x-www-form-urlencoded",
          Authorization:
            "Basic " +
            btoa("rzp_test_fJLPcc02TCY2NS" + ":" + "E73rH6RLSA5GO1Uto1N1tGpb"),
        },
        body: JSON.stringify(data),
      });

      orderCreationResult = await response.json();
      console.log("Success:", orderCreationResult);
    } catch (error) {
      console.error("Error:", error);
    }
  }

  var options = {
    key: "rzp_test_fJLPcc02TCY2NS", // Enter the Key ID generated from the Dashboard
    amount: "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
    currency: "INR",
    name: "Acme Corp", //your business name
    description: "Test Transaction",
    image: "https://example.com/your_logo",
    order_id: "", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
    callback_url: "https://localhost:4321/payment/thankyou",
    handler: function (response) {
      if (
        response.razorpay_payment_id == "undefined" ||
        response.razorpay_payment_id < 1
      ) {
        window.location.replace("/payment/failure");
      } else {
        window.location.replace("/payment/thankyou");
      }
    },
    prefill: {
      //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
      name: "Gaurav Kumar", //your customer's name
      email: "gaurav.kumar@example.com",
      contact: "9000090000", //Provide the customer's phone number for better conversion rates
    },
    notes: {
      address: "Razorpay Corporate Office",
    },
    theme: {
      color: "#3399cc",
    },
  };

  checkoutButton.addEventListener("click", async (e) => {
    console.log("performing checkout");
    await createRazorPay(body);

    options.order_id = orderCreationResult.id;
    console.log("options: ", JSON.stringify(options));

    var rzp1 = new Razorpay(options);
    rzp1.on("payment.failed", function (response) {
      alert(response.error.code);
      alert(response.error.description);
      alert(response.error.source);
      alert(response.error.step);
      alert(response.error.reason);
      alert(response.error.metadata.order_id);
      alert(response.error.metadata.payment_id);
    });

    rzp1.open();
    e.preventDefault();
  });

  document.getElementById("place-order").addEventListener(
    "click",
    (e) => {
      console.log("clicked place order");
    },
    false
  );
</script>
