---
import ClearIcon from "@mui/icons-material/Clear";
import ShoppingBagOutlinedIcon from "@mui/icons-material/ShoppingBagOutlined";
import { Button } from "@mui/material";

interface Props {
  item: object;
}

const { item } = Astro.props;
const cardData = new Map(Object.entries(item));
let title = cardData.get("Title");
const price = cardData.get("Price");
const id = cardData.get("id");
const lineage = cardData.get("Lineage");
console.log("cartcard id -> " + id);

if (title.length > 20) title = title.slice(0, 20) + "...";
cardData.delete("Title");
cardData.delete("Price");
cardData.delete("id");
---

<div class="closet-card-parent" id="closet-card-parent">
  <div class="closet-info">
    <div class="closet-card-img">
      <img
        class="closet-img"
        src="https://www.thesprucepets.com/thmb/_1iWuPzSPKMItHCErr55PRPbc2U=/800x0/filters:no_upscale():strip_icc()/40386520_272666870012786_5732696489881099002_n-5b98360ac9e77c0050fa8a73.jpg"
        alt="product image"
      />
    </div>

    <div class="closet-title">
      <div>{title}</div>
    </div>

    <div class="closet-detail">
      <div>Lineage:</div>
      <div>{lineage}</div>
    </div>

    <div class="price-block">
      <div class="price">Rs.{price}</div>
      <div class="tag">â†“ Price Drop</div>
    </div>
  </div>

  <div class="footer">
    <div>Move To Bag</div>
  </div>
</div>

<style>
  .closet-card-parent {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    width: 20%;
    height: 450px;
    margin: 3% 2%;
    box-shadow: 0 -6px 20px -10px #000000;
    background-color: rgb(255, 255, 255);
  }

  .closet-info {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }

  .closet-card-img {
    height: 60%;
    display: flex;
    justify-content: center;
    box-shadow: 0 6px 10px -10px #000000;
  }

  .closet-img {
    padding: 0%;
    border-top-right-radius: 0%;
    border-top-left-radius: 0%;
    object-fit: contain;
  }

  .closet-card-parent:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .closet-card-parent:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent-light));
  }

  .closet-title {
    font-size: large;
    font-weight: 400;
    color: #000000;
    padding: 3%;
    padding-top: 3%;
  }

  .price-block {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin-top: 5%;
    margin-bottom: 5%;
  }

  .price {
    font-size: large;
    font-weight: bolder;
    color: rgb(0, 0, 0);
  }

  .tag {
    color: red;
    font-weight: 500;
    font-size: small;
  }

  .closet-detail {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    color: #909090cb;
    font-weight: 400;
  }

  .footer {
    display: flex;
    flex-direction: row;
    justify-content: center;
    box-shadow: 0 6px 30px -10px #000000;
    padding: 5%;
  }

  .footer > * {
    color: rgb(0, 126, 244);
    font-size: medium;
    font-weight: bold;
  }
</style>

<script>
  let closetCards = document.getElementsByClassName("closet-info");
  for (let i = 0; i < closetCards.length; i++) {
    let card = closetCards.item(i);
    card.addEventListener(
      "click",
      async (event) => {
        event.preventDefault();
        console.log("card -> " + card.getAttribute("id"));
        location.href = "/pdp?id=" + card.getAttribute("id");
      },
      false
    );
  }
</script>
